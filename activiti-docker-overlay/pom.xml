<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>activiti-overlay-docker</artifactId>
	<packaging>jar</packaging>
	<name>Activiti SDK - Overlay Docker Containers</name>

	<parent>
		<groupId>org.activiti.community</groupId>
		<artifactId>activiti-sdk</artifactId>
		<version>1.0.0</version>
	</parent>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jar-extensions</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.activiti.community</groupId>
									<artifactId>activiti-extensions-jar</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.parent.basedir}/target/extensions</outputDirectory>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<execution>
						<id>copy-war-extensions</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.activiti.community</groupId>
									<artifactId>activiti-app-overlay-war</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.parent.basedir}/target/wars</outputDirectory>
									<destFileName>activiti-app.war</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.activiti.community</groupId>
									<artifactId>activiti-app-rest-overlay-war</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.parent.basedir}/target/wars</outputDirectory>
									<destFileName>activiti-rest.war</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.activiti.community</groupId>
									<artifactId>activiti-admin-overlay-war</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.parent.basedir}/target/wars</outputDirectory>
									<destFileName>activiti-admin.war</destFileName>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-and-filter-docker-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.parent.basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>**/*.jar</exclude>
										<exclude>**/*.so</exclude>
										<exclude>**/*.gz</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-and-filter-docker-resources-non-filtered</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.parent.basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>false</filtering>
									<includes>
										<include>**/*.jar</include>
										<include>**/*.so</include>
										<include>**/*.gz</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<keepRunning>false</keepRunning>
					<skip>false</skip>
					<showLogs>true</showLogs>
					<logAll>true</logAll>
					<verbose>true</verbose>
					<skipSave>${docker-maven-plugin.skip.save}</skipSave>
					<skipBuild>${docker-maven-plugin.build.save}</skipBuild>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<images>
						<image>
							<alias>activiti-app</alias>
							<name>activiti-sdk/activiti-app-project:development</name>
							<build>
								<buildOptions>
									<platforms>linux/amd64, linux/arm64</platforms>
								</buildOptions>
								<contextDir>${project.parent.basedir}/target</contextDir>
								<dockerFile>Dockerfile-app</dockerFile>
								<tags>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<network>
									<name>activiti-network</name>
									<alias>activiti-app</alias>
								</network>
								<ports>
									<port>${docker.activiti-app.tomcat.port.external}:${docker.activiti-app.tomcat.port.internal}</port>
								</ports>
								<wait>
									<http>
										<url>http://${docker.host.address}:${docker.activiti-app.tomcat.port.external}/activiti-app</url>
									</http>
									<time>${docker.activiti.time.test}</time>
								</wait>
								<volumes>
									<bind>aps-contentstore-volume:/data</bind>
								</volumes>
								<dependsOn>
									<container>activiti_postgres</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<alias>activiti-rest</alias>
							<name>activiti-sdk/activiti-rest-project:development</name>
							<build>
								<buildOptions>
									<platforms>linux/amd64, linux/arm64</platforms>
								</buildOptions>
								<contextDir>${project.parent.basedir}/target</contextDir>
								<dockerFile>Dockerfile-rest</dockerFile>
								<tags>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<network>
									<name>activiti-network</name>
									<alias>activiti-rest</alias>
								</network>
								<ports>
									<port>${docker.activiti-rest.tomcat.port.external}:${docker.activiti-rest.tomcat.port.internal}</port>
								</ports>
								<volumes>
									<bind>aps-contentstore-volume:/data</bind>
								</volumes>
								<dependsOn>
									<container>activiti_postgres</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<alias>activiti-admin</alias>
							<name>activiti-sdk/activiti-admin-project:development</name>
							<build>
								<buildOptions>
									<platforms>linux/amd64, linux/arm64</platforms>
								</buildOptions>
								<contextDir>${project.parent.basedir}/target</contextDir>
								<dockerFile>Dockerfile-admin</dockerFile>
								<tags>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<network>
									<name>activiti-network</name>
									<alias>activiti-admin</alias>
								</network>
								<ports>
									<port>${docker.activiti-admin.tomcat.port.external}:${docker.activiti-admin.tomcat.port.internal}</port>
								</ports>
								<wait>
									<http>
										<url>http://${docker.host.address}:${docker.activiti-admin.tomcat.port.external}/activiti-admin</url>
									</http>
									<time>${docker.activiti.time.test}</time>
								</wait>
								<dependsOn>
									<container>activiti-admin_postgres</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<alias>activiti_postgres</alias>
							<name>${docker.activiti.database.image}</name>
							<run>
								<network>
									<name>activiti-network</name>
									<alias>activiti_postgres</alias>
								</network>
								<env>
									<POSTGRES_DB>${docker.activiti.database.server.db.name}</POSTGRES_DB>
									<POSTGRES_USER>${docker.activiti.database.username}</POSTGRES_USER>
									<POSTGRES_PASSWORD>${docker.activiti.database.password}</POSTGRES_PASSWORD>
								</env>
								<ports>
									<port>${docker.activiti.database.port.external}:${docker.activiti.database.port.internal}</port>
								</ports>
								<wait>
									<log>database system is ready to accept connections</log>
									<time>20000</time>
								</wait>
								<volumes>
									<bind>activiti-db-volume:/var/lib/postgresql/data</bind>
								</volumes>
							</run>
						</image>
						<image>
							<alias>activiti-admin_postgres</alias>
							<name>${docker.activiti.database.image}</name>
							<run>
								<network>
									<name>activiti-network</name>
									<alias>activiti-admin_postgres</alias>
								</network>
								<env>
									<POSTGRES_DB>${docker.activiti-admin.database.server.db.name}</POSTGRES_DB>
									<POSTGRES_USER>${docker.activiti-admin.database.username}</POSTGRES_USER>
									<POSTGRES_PASSWORD>${docker.activiti-admin.database.password}</POSTGRES_PASSWORD>
								</env>
								<ports>
									<port>${docker.activiti-admin.database.port.external}:${docker.activiti-admin.database.port.internal}</port>
								</ports>
								<wait>
									<log>database system is ready to accept connections</log>
									<time>20000</time>
								</wait>
								<cmd>-p ${docker.activiti-admin.database.port.external}</cmd>
								<volumes>
									<bind>activiti-admin-db-volume:/var/lib/postgresql/data</bind>
								</volumes>
							</run>
						</image>
					</images>
					<volumes>
						<volume>
							<name>activiti-db-volume</name>
							<driver>local</driver>
						</volume>
						<volume>
							<name>activiti-admin-db-volume</name>
							<driver>local</driver>
						</volume>
						<volume>
							<name>activiti-contentstore-volume</name>
							<driver>local</driver>
						</volume>
					</volumes>
					<executions>
						<execution>
							<id>start-docker</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>build</goal>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-docker</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>purge</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>remove-volumes</id>
								<phase>clean</phase>
								<goals>
									<goal>volume-remove</goal>
								</goals>
								<configuration>
									<volumes>
										<volume>
											<name>activiti-db-volume</name>
										</volume>
										<volume>
											<name>activiti-admin-db-volume</name>
										</volume>
										<volume>
											<name>activiti-contentstore-volume</name>
										</volume>
									</volumes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>